name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  GITLAB_REGISTRY: registry.gitlab.com
  IMAGE_NAME: talahon-tech/website
  HELM_CHART_NAME: talahon-website

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITLAB_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitLab
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITLAB_REGISTRY }}
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker image tag
        id: save_tag
        run: |
          TAG=$(echo '${{ steps.meta.outputs.tags }}' | head -n 1)
          echo "DOCKER_TAG=${TAG##*:}" >> $GITHUB_ENV

  helm:
    needs: docker
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Update Helm chart version and appVersion
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          yq eval ".version = \"${VERSION}\"" -i Chart.yaml
          yq eval ".appVersion = \"${VERSION}\"" -i Chart.yaml
          yq eval ".image.tag = \"${DOCKER_TAG}\"" -i values.yaml

      - name: Create Helm package
        run: |
          mkdir -p .cr-release-packages
          helm package . -d .cr-release-packages

      - name: Create index.yaml
        run: |
          helm repo index .cr-release-packages --url https://raw.githubusercontent.com/${{ github.repository }}/gh-pages/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .cr-release-packages
          publish_branch: gh-pages
          keep_files: true
          force_orphan: true
          enable_jekyll: false
          commit_message: "chore: update helm chart repository" 